{
    "$schema": "https://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "imageName": {
            "type": "String",
            "defaultValue": "appsvc/sample-hello-world:latest",
            "metadata": {
                "description": "The image which defines the application to be hosted in Azure."
            }
        },
        "name": {
            "type": "String",
            "defaultValue": "[concat('site', uniqueString(resourceGroup().id, deployment().name))]",
            "metadata": {
                "description": "A unique name to identify the site, and its relate assets once it is created."
            }
        },
        "database": {
            "type": "String",
            "defaultValue": "none",
            "allowedValues": [
                "none",
                "postgresql",
                "mysql"
            ],
            "metadata": {
                "description": "The flavor of database that should be deployed alongside this application."
            }
        },
        "databaseName": {
            "type": "String",
            "defaultValue": "buffalo_development",
            "metadata": {
                "description": "The name that will identify the database which is created, should one be created."
            }
        },
        "databaseAdministratorLogin": {
            "type": "String",
            "defaultValue": "[concat('admin', parameters('name'))]",
            "metadata": {
                "description": "The user handle for the administrator of the database to be created."
            }
        },
        "databaseAdministratorLoginPassword": {
            "type": "SecureString",
            "defaultValue": "",
            "metadata": {
                "description": "The password for the administrator of the database to be created."
            }
        }
    },
    "variables": {
        "hostingPlanName": "[concat('hostingPlan-', parameters('name'))]",
        "postgresqlName": "[concat(parameters('name'), '-postgresql')]",
        "mysqlName": "[concat(parameters('name'), '-mysql')]",
        "postgresqlConnection": "[concat('postgres://', parameters('databaseAdministratorLogin'), '@', variables('postgresqlName'),':', parameters('databaseAdministratorLoginPassword'), '@', variables('postgresqlname'), '.postgres.database.azure.com:5432/', parameters('databaseName'))]",
        "mysqlConnection": "[concat('mysql://', parameters('databaseAdministratorLogin'), '@', variables('mysqlName'), ':', parameters('databaseAdministratorLoginPassword'), '@tcp(', variables('mysqlName'), '.mysql.database.azure.com:3306)/', parameters('databaseName'), '?allowNativePasswords=true')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/sites",
            "name": "[parameters('name')]",
            "apiVersion": "2016-03-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-related:', subscription().id, '/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "empty",
                "gobuffalo": "empty"
            },
            "properties": {
                "name": "[parameters('name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                            "value": "false"
                        }
                    ],
                    "connectionStrings": [
                        {
                            "name": "DATABASE_URL",
                            "connectionString": "[if(equals(parameters('database'), 'postgresql'), variables('postgresqlConnection'), if(equals(parameters('database'), 'mysql'), variables('mysqlConnection'),'not applicable'))]",
                            "type": "[if(equals(parameters('database'), 'mysql'), 'mysql', 'custom')]"
                        }
                    ],
                    "appCommandLine": "",
                    "linuxFxVersion": "[concat('DOCKER|', parameters('imageName'))]"
                },
                "serverFarmId": "[concat(subscription().id, '/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                "hostingEnvironment": ""
            },
            "dependsOn": [
                "[variables('hostingPlanName')]",
                "[variables('postgresqlName')]",
                "[variables('mysqlName')]"
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "Tier": "Basic",
                "Name": "B1"
            },
            "kind": "linux",
            "name": "[variables('hostingPlanName')]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "workerSizeId": "0",
                "reserved": true,
                "numberOfWorkers": "1",
                "hostingEnvironment": ""
            }
        },
        {
            "condition": "[equals(parameters('database'), 'postgresql')]",
            "type": "Microsoft.DBforPostgreSQL/servers",
            "sku": {
                "name": "B_Gen5_1",
                "family": "Gen5",
                "capacity": "",
                "size": "5120",
                "tier": "Basic"
            },
            "kind": "",
            "name": "[variables('postgresqlName')]",
            "apiVersion": "2017-12-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "version": "9.6",
                "administratorLogin": "[parameters('databaseAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('databaseAdministratorLoginPassword')]",
                "sslEnforcement": "Disabled"
            },
            "resources": [
                {
                    "condition": "[equals(parameters('database'), 'postgresql')]",
                    "type": "firewallRules",
                    "apiVersion": "2017-12-01-preview",
                    "dependsOn": [
                        "[variables('postgresqlName')]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAzureIPs",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "condition": "[equals(parameters('database'), 'mysql')]",
            "type": "Microsoft.DBforMySQL/servers",
            "sku": {
                "name": "B_Gen5_2",
                "tier": "Basic",
                "capacity": 2,
                "size": 5120,
                "family": "Gen5"
            },
            "kind": "",
            "name": "[variables('mysqlName')]",
            "apiVersion": "2017-12-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "version": "5.7",
                "administratorLogin": "[parameters('databaseAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('databaseAdministratorLoginPassword')]",
                "storageProfile": {
                    "storageMB": 5120,
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled"
                },
                "sslEnforcement": "Disabled"
            },
            "resources": [
                {
                    "condition": "[equals(parameters('database'), 'mysql')]",
                    "type": "firewallRules",
                    "apiVersion": "2017-12-01-preview",
                    "dependsOn": [
                        "[variables('mysqlName')]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAzureIPs",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                    }
                }
            ]
        }
    ]
}